{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_LENGTH","SORT_FIELD_ALPHABETICALLY","GoodsList","goods","map","good","App","useState","sortField","setSortField","reversedField","setReversedField","visibleGoods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getPreparedGoods","isReset","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,SACpBC,EAA4B,iBAErBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SAiCN,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EA5BR,SAA0BT,EAAOK,EAAWE,GAC1C,IAAMG,EAAa,YAAOV,GAiB1B,OAfIK,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKR,EACH,OAAOe,EAAME,OAASD,EAAMC,OAE9B,KAAKhB,EACH,OAAOc,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKXN,EACKG,EAAcM,UAGhBN,EAOHO,CAAiBrB,EAAiBS,EAAWE,GAM3CW,EAAUb,GAAaE,EAE7B,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYhB,IAAcP,IAEhCwB,QAAS,kBAAMhB,EAAaR,IAR9B,iCAaA,wBACEsB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYhB,IAAcR,IAEhCyB,QAAS,kBAAMhB,EAAaT,IAR9B,4BAaA,wBACEuB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAad,IAEnBe,QAAS,kBAAMd,GAAkBD,IARnC,qBAaCW,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QArDI,WACZhB,EAAa,IACbE,GAAiB,IAgDX,sBAUJ,cAAC,EAAD,CAAWR,MAAOS,QC1HxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8d2e55b2.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\n\nexport const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nfunction getPreparedGoods(goods, sortField, reversedField) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversedField) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversedField, setReversedField] = useState(false);\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, sortField, reversedField);\n  const reset = () => {\n    setSortField('');\n    setReversedField(false);\n  };\n\n  const isReset = sortField || reversedField;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': sortField !== SORT_FIELD_ALPHABETICALLY },\n            )}\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortField !== SORT_FIELD_LENGTH },\n            )}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': !reversedField },\n            )}\n          onClick={() => setReversedField(!reversedField)}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}